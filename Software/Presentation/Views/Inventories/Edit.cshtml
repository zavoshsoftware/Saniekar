@model Models.Inventory

@{
    ViewBag.Title = "ویرایش " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Edit", "Inventories",FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">        
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.ValidationMessage("duplicate")
	    @Html.HiddenFor(model => model.BranchId)
        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProductId", String.Empty)
                @Html.ValidationMessageFor(model => model.ProductId)
            </div>
        </div>

	    <div class="form-group">
		    @Html.LabelFor(model => model.MattressId, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.DropDownList("MattressId", String.Empty)
		    </div>
	    </div>

	    <div class="form-group">
		    @Html.LabelFor(model => model.ProductColorId, new { @class = "control-label col-md-2" })
		    <div class="col-md-10">
			    @Html.DropDownList("ProductColorId", String.Empty)
		    </div>
	    </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Stock, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Stock)
                @Html.ValidationMessageFor(model => model.Stock)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OrderPoint, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.OrderPoint)
                @Html.ValidationMessageFor(model => model.OrderPoint)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </div>
        </div>

	 @Html.HiddenFor(model => model.CreationDate)
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                                  @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group" id="buttons">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-primary" />
	            @Html.ActionLink("بازگشت به فهرست", "Index",new {id=ViewBag.BranchId})
            </div>
        </div>
    </div>
}


@section scripts{
	<script>
	 

		$('#ProductId').on('change',
			function() {
				var SelectedValue = $(this).val();
				if (SelectedValue !== "") {
					var procemessage = "<option value='0'> صبرکنید...</option>";
					$("#ProductColorId").html(procemessage).show();
					$.ajax(
						{
							url: "/inventories/GetProductColorByProductId",
							data: { id: SelectedValue },
							cache: false,
							type: "POST",
							success: function(data) {
								var markup = "<option value='0'>انتخاب رنگ محصول</option>";
								for (var x = 0; x < data.length; x++) {
									markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
								}
								$("#ProductColorId").html(markup).show();

							},
							error: function(reponse) {
								alert("error : " + reponse);
							}
						});
				}
			});
	</script>
}

@model Models.Inventory

@{
		ViewBag.Title = "افزودن " + Server.HtmlDecode(Html.DisplayNameFor(model => model).ToString());
		Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<h2>افزودن @Html.DisplayNameFor(model => model)</h2>

@using (Html.BeginForm("Create", "Inventories", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			@Html.ValidationSummary(true)

			@Html.ValidationMessage("duplicate")

			<div class="form-group">
				<div class="form-group">
					@Html.LabelFor(model => model.ProductId, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("ProductId", String.Empty)
						@Html.ValidationMessageFor(model => model.ProductId)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.MattressId, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("MattressId", String.Empty)
						@Html.ValidationMessageFor(model => model.MattressId)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ProductColorId, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.DropDownList("ProductColorId", String.Empty)
						@Html.ValidationMessageFor(model => model.ProductColorId)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Stock, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Stock)

						@Html.ValidationMessageFor(model => model.Stock)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.OrderPoint, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.OrderPoint)

						@Html.ValidationMessageFor(model => model.OrderPoint)
					</div>
				</div>

				<div class="form-group">
					<div class="col-md-2">
					</div>
					<div class="col-md-10">
						@Html.EditorFor(model => model.IsActive)

						@Html.LabelFor(model => model.IsActive)
						@Html.ValidationMessageFor(model => model.IsActive)
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Description)

						@Html.ValidationMessageFor(model => model.Description)
					</div>
				</div>

				<div class="form-group" id="buttons">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="ایجاد" class="btn btn-primary" />
						@Html.ActionLink("بازگشت به فهرست", "Index", new { id = ViewBag.BranchId })
					</div>
				</div>
			</div>
		</div>
}

@section scripts{
	<script>
		$(document).ready(function () {
			$('#ProductColorId').attr("disabled", true); 
		});

		$('#ProductId').on('change',
			function() {
				var SelectedValue = $(this).val();
				if (SelectedValue !== "") {
					var procemessage = "<option value='0'> صبرکنید...</option>";
					$("#ProductColorId").html(procemessage).show();
					$.ajax(
						{
							url: "/inventories/GetProductColorByProductId",
							data: { id: SelectedValue },
							cache: false,
							type: "POST",
							success: function(data) {
								var markup = "<option value='0'>انتخاب رنگ محصول</option>";
								for (var x = 0; x < data.length; x++) {
									markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
								}
								$("#ProductColorId").html(markup).show();
								$('#ProductColorId').attr("disabled", false); 

							},
							error: function(reponse) {
								alert("error : " + reponse);
							}
						});
				}
			});
	</script>
}

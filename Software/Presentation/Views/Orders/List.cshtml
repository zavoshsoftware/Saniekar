@model IEnumerable<Models.Order>
@{
		ViewBag.Title = "لیست سفارشات";
		Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}
<h2>لیست سفارشات</h2>
@(Html.Kendo().Grid(Model)
		.Name("Grid")
		.Columns(columns =>
		{
		columns.Bound(model => model.Code);
		columns.Bound(model => model.OrderDateStr);
		columns.Bound(model => model.User.FullName);
		columns.Bound(model => model.OrderStatus.Title);
		columns.Bound(model => model.RecieveDateStr);
		columns.Bound(model => model.TotalAmountStr);
		columns.Bound(model => model.RemainAmountStr);
		columns.Bound(model => model.ShipmentFromFactory);
		columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
										.Template(@<text>

							@{
									var identity = (System.Security.Claims.ClaimsIdentity)User.Identity;
									string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;

									if (role.ToLower() != "factory")
									{
										if (item.OrderStatus.Code < 4)
										{
											@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
}
										else
										{
												 @Html.ActionLink("جزییات", "Details", new { id = @item.Id }, new { @class = "k-button" }) 

										}
											@*@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})*@
											@Html.ActionLink("پرداخت", "index", "Payments", new { id = @item.Id }, new { @class = "k-button" })
									}
									else
									{
											@Html.ActionLink("جزییات", "Details", new { id = @item.Id }, new { @class = "k-button" })
											@Html.ActionLink("ارسال شد", "Sent", new { id = @item.Id }, new { @class = "k-button" })

									}
							}

										</text>).Width(200);
		}).Sortable().Filterable()
						.DataSource(dataSource => dataSource.Server()
										.Model(model => model.Id(item => item.Id))
						)
)

<script>
	$(document).ready(function () {
		var t = $("#Grid table tbody tr");
		for (var i = 0; i < t.length; i++) {
			var y = t[i].children[3].innerText;
			var code = t[i].children[0].innerText;
			if (y === "ارسال شد") {
				//t[i].addClass("k-state-selected");
				//t[i].bgColor="green";
				t[i].className = t[i].className + ' k-selected';


				$.ajax({
					type: "Post",
					url: "/Orders/CheckInventoryByCode",
					data: {
						"code": code,

					},
					success: function (data) {
						if (!data.includes("error")) {
							if (data === false) {
								t[i].className = t[i].className + ' k-selected2';
							}
						} else {
							$('#submit-succes').css('display', 'none');
							$('#submit-error').css('display', 'block');
							$('#submit-error').html('خطایی رخ داده است. لطفا دوباره تلاش کنید');
						}
					},
					error: function () {
						$('#submit-succes').css('display', 'none');
						$('#submit-error').css('display', 'block');
						$('#submit-error').html('خطایی رخ داده است. لطفا دوباره تلاش کنید');
					}
				});

			}
		}
	});

</script>
@model IEnumerable<Models.Order>
@{
    ViewBag.Title = "لیست سفارشات";
    Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}
<h2>لیست سفارشات</h2>
@(Html.Kendo().Grid(Model)
      .Name("Grid")
      .Columns(columns =>
      {
          columns.Bound(model => model.Code);
          columns.Bound(model => model.OrderDateStr);
          columns.Bound(model => model.OrderStatus.Title);
          columns.Bound(model => model.RecieveDateStr);
          columns.Bound(model => model.TotalAmountStr);
          columns.Bound(model => model.RemainAmountStr);
          columns.Bound(model => model.ShipmentFromFactory);
          columns.Bound(item => @item.Id).Title("دستورات").Filterable(false).Groupable(false)
	          .Template(@<text>
		                    
@{
		var identity = (System.Security.Claims.ClaimsIdentity)User.Identity;
		string role = identity.FindFirst(System.Security.Claims.ClaimTypes.Role).Value;

	if (role.ToLower() != "factory")
	{
		@Html.ActionLink("ویرایش", "Edit", new {id = @item.Id}, new {@class = "k-button"})
		@*@Html.ActionLink("حذف", "Delete", new {id = @item.Id}, new {@class = "k-button"})*@
		@Html.ActionLink("مدیریت پرداخت ها", "index", "Payments", new {id = @item.Id}, new {@class = "k-button"})
		@Html.ActionLink("جزییات", "Details", new { id = @item.Id }, new { @class = "k-button" })
		}
		else
		{
				@Html.ActionLink("جزییات", "Details", new { id = @item.Id }, new { @class = "k-button" })
				@Html.ActionLink("ارسال شد", "Sent", new { id = @item.Id }, new { @class = "k-button" })

		}
}
		               
	                     </text>).Width(200);
      }).Sortable()
      .DataSource(dataSource => dataSource.Server()
          .Model(model => model.Id(item => item.Id))
      )
      )

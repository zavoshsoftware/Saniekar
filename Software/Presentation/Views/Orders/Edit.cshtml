@model ViewModels.OrderEditViewModel
@{
		ViewBag.Title = "ویرایش فاکتور";
		Layout = "~/Views/Shared/BackEndLayout/_BackEndLayout.cshtml";
}

<div class="panel panel-primary">
	<div class="panel-heading">
		<label>@ViewBag.Title کد @Model.Order.Code</label>

		<a href="/orders/list" style="float: left; color: #fff;"><i class="fa fa-2x fa-arrow-left"></i></a>
	</div>
	<div class="panel-body">
		<div class="row">
			<div class="col-md-6">
				<label class="col-md-3">انتخاب شعبه*:</label>
				<div class="col-md-9 ">
					@Html.DropDownList("BranchId", null, "انخاب شعبه", new { @class = "form-control" })


				</div>
			</div>
			<div class="col-md-6">
				<label class="col-md-3">تاریخ فاکتور:</label>
				<div class="col-md-9 ">
					@*@(Html.Kendo().DatePickerFor(m => m.Order.OrderDate))*@
					@Html.EditorFor(model => model.Order.OrderDate)

				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-md-6">
				<label class="col-md-3">تلفن همراه*:</label>
				<div class="col-md-9 ">
					<input type="text" id="CellNumber" value="@Model.Order.User.CellNum" class="form-control" placeholder="تلفن همراه" />
				</div>
			</div>
			<div class="col-md-6">
				<label class="col-md-3">تاریخ تحویل:</label>
				<div class="col-md-9 ">
					@Html.EditorFor(model => model.Order.RecieveDate)

					
					@*@(Html.Kendo().DatePickerFor(m => m.Order.RecieveDate))*@
				</div>
			</div>
		</div>



		<div class="row">
			<div class="col-md-6">
				<label class="col-md-3">نام مشتری*:</label>
				<div class="col-md-9 ">
					<input type="text" id="fullName" value="@Model.Order.User.FullName" class="form-control" placeholder="نام مشتری" />
				</div>
			</div>
			<div class="col-md-6">
				<label class="col-md-3">تلفن:</label>
				<div class="col-md-9 ">
					<input type="text" id="Phone" class="form-control" value="@Model.Order.Phone" placeholder="تلفن" />
				</div>
			</div>
		</div>


		<div class="row">
			<div class="col-md-6">
				<label class="col-md-3">آدرس:</label>
				<div class="col-md-9 ">
					<input type="text" id="address" value="@Model.Order.Address" class="form-control" placeholder="آدرس" />
				</div>
			</div>
			<div class="col-md-6">
				<label class="col-md-3">نوع حمل:</label>
				<div class="col-md-9 ">
					@Html.DropDownList("ShipmentTypeId", null, "نوع حمل", new { @class = "form-control" })
				</div>
			</div>
		</div>


		<div class="row">
			<div class="col-md-4">
				<label class="col-md-3">استان:</label>
				<div class="col-md-9 ">
					@Html.DropDownList("ProvinceId", null, "انتخاب استان", new { @class = "form-control" })
				</div>
			</div>
			<div class="col-md-4">
				<label class="col-md-3">شهر:</label>
				<div class="col-md-9 ">
					@Html.DropDownList("CityId", null, "انتخاب شهر", new { @class = "form-control" })


				</div>
			</div>
			<div class="col-md-4">
				<label class="col-md-3">محله:</label>
				<div class="col-md-9 ">
					@Html.DropDownList("RegionId", null, "انتخاب محله", new { @class = "form-control" })




				</div>
			</div>
		</div>

		<div class="row">
			<div class="col-md-5 product-list">

				<div class="panel panel-primary">
					<div class="panel-heading">انتخاب محصولات</div>
					<div class="panel-body">
						<div class="row">

							<label class="col-md-3 product-group-title">انتخاب گروه محصولات:</label>
							<div class="col-md-9 ">
								<div class="row">
									@Html.DropDownList("ProductGroupId", (IEnumerable<SelectListItem>)ViewBag.ProductGroupId, new { @class = "form-control pro-group-selector" })
								</div>


							</div>


						</div>
						<p id="parent-message" class="alert alert-info">رنگ محصول <span id="parentProductTitle"></span> را انتخاب کنید</p>
						<div class="row" id="product-list">

						</div>

					</div>
				</div>
			</div>
			<div class="col-md-7">

				<div class="panel panel-primary">
					<div class="panel-heading">فاکتور</div>
					<div class="panel-body">
						<table id="factor" class="table table-responsive">
							<thead class="thead-dark">
								<tr>
									<th scope="col">نام محصول</th>
									<th scope="col">رنگ</th>
									<th scope="col">تشک</th>
									<th scope="col">تعداد</th>
									<th scope="col">قیمت واحد</th>
									<th scope="col">قیمت کل</th>
									<th scope="col">#</th>
									@*<th scope="col">توضیحات</th>*@
								</tr>
							</thead>
							<tbody>
								@foreach (var detail in Model.OrderDetails)
								{
										<tr>

											<td>@detail.Product.Title</td>
											@if (detail.ProductColorId != null)
											{
													<td>@detail.ProductColor.Title</td>
}
											else
											{
													<td>-</td>
}
											@if (detail.MattressId != null)
											{
													<td>@detail.Mattress.Title</td>
}
											else
											{
													<td>-</td>
}

											<td class="qtytable">@detail.Quantity</td>
											@*		<td class="qtytable"><input id="@(String.Format("{0}{1}", "qty", detail.ProductId))" class="qty" onkeyup="return changeRowTotal(this.id, 3)" value="@detail.Quantity" /> </td>*@
											@if (detail.ProductColorId == null)
											{
													<td class="amounttable">@detail.AmountStr </td>
													@*<td class="amounttable"><input id="@(String.Format("{0}{1}", "amount", detail.ProductId))" onkeyup="return changeRowTotal(this.id, 3)" value="@detail.AmountStr" /> </td>*@
													<td id="@(String.Format("{0}{1}", "rowAmount", detail.ProductId))">@detail.RowAmountStr</td>
}
											else
											{
												decimal amountDecimal = detail.Amount;
												string rowAmount = (amountDecimal * detail.Quantity).ToString("n0") + " تومان";

												string amount = amountDecimal.ToString("n0") + " تومان";
													<td class="amounttable">@amount</td>
													@*<td class="amounttable"><input id="@(String.Format("{0}{1}", "amount", detail.ProductId))" onkeyup="return changeRowTotal(this.id, 3)" value="@amount" /> </td>*@
													<td id="@(String.Format("{0}{1}", "rowAmount", detail.ProductId))">@rowAmount</td>
}
											<td><i class="fa fa-remove" onclick="removeRow('@detail.ProductId');"></i></td>
										</tr>
								}
							</tbody>

						</table>



					</div>
					<div class="panel-footer">
						<table>

							<tr>
								<td>جمع کل</td>
								<td id="total">@Model.Order.SubAmountStr</td>
							</tr>
							<tr>
								<td>
									هزینه های اضافه شونده (تومان)
								</td>
								<td>
									<input type="text" class="form-control" id="addedAmount" value="@Model.Order.AdditiveAmountStr" onKeyUp="return changeTotalOrder()" />
								</td>
							</tr>
							<tr>
								<td>
									هزینه های کسر شونده (تومان)
								</td>
								<td>
									<input type="text" class="form-control" id="decreasedAmount" value="@Model.Order.DiscountAmountStr" onKeyUp="return changeTotalOrder()" />
								</td>
							</tr>

							<tr>
								<td>
									جمع کل فاکتور (تومان)
								</td>
								<td>
									<input type="text" class="form-control" id="totalAmount" readonly="readonly" value="@Model.Order.TotalAmountStr" />
								</td>
							</tr>
							<tr>
								@if (!Model.HasPayment)
								{
										<td>
											مبلغ پرداختی
										</td>
										<td>
											<input type="text" class="form-control" id="payment" value="@Model.Order.PaymentAmountStr" onKeyUp="return changeTotalOrder()" />
										</td>
										<td>
											@Html.DropDownList("PaymentTypeId", null, "نوع پرداخت", new { @class = "form-control" })
										</td>
								}

								else
								{
										<td>
											مبلغ پرداختی
										</td>
										<td>
											<input type="text" class="form-control" id="payment" value="@Model.Order.PaymentAmountStr" onKeyUp="return changeTotalOrder()" readonly="readonly" />
										</td>
										<td>
											@Html.DropDownList("PaymentTypeId", null, "نوع پرداخت", new { @class = "form-control", @disabled = "disabled" })
										</td>
																		<dfn>
																			این سفارش به جز پرداخت دیگری به جز پیش پرداخت دارد. جهت مدیریت پرداخت های این سفارش
																			<a href="/Payments/index/" @Model.Order.Id>اینجا</a>
																			را کلیک کنید
																		</dfn>
								}
							</tr>


							<tr>
								<td>
									مبلغ باقی مانده
								</td>
								<td>
									<input type="text" class="form-control" id="remainAmount" readonly="readonly" value="@Model.Order.RemainAmountStr" />
								</td>
								<td>
									<select id="ddlSenFrom" class="form-control">
										@if (Model.Order.ShipmentFromFactory)
										{
												<option value="0">ارسال از فروشگاه</option>
												<option value="1" selected="selected">ارسال از کارخانه</option>
}
										else
										{
												<option value="0" selected="selected">ارسال از فروشگاه</option>
												<option value="1">ارسال از کارخانه</option>
}
									</select>
								</td>
							</tr>


							<tr>
								<td>
									توضیحات
								</td>
								<td>
									<textarea class="form-control" id="desc" placeholder="توضیحات">@Model.Order.Description</textarea>
								</td>

								<td>
									<textarea class="form-control" id="factorydesc" placeholder="توضیحات اضافی برای کارخانه">@Model.Order.FactoryShipmentDesc</textarea>
								</td>

							</tr>
							<tr>
								<td>
									ضمیمه
									@if (!string.IsNullOrEmpty(Model.Order.Attachment))
									{
											<a href="@Model.Order.Attachment" class="btn btn-info" target="_blank"> <i class="fa fa-download"></i>  </a>
									}

								</td>
								<td>
									<input type="file" id="FileUpload1" />
								</td>
								<td>
									<button type="button" id="btnUpload" class="btn btn-dark" onclick="uploadFile();"> <i class="fa fa-upload"></i> بارگزاری </button>
								</td>
							</tr>

							<tr>
								<td></td>
								<td>
									<input type="button" class="btn btn-success" onclick="postEditOrder();" value="ثبت تغییرات" />

								</td>
							</tr>
						</table>
						<p class="alert alert-success" id="submit-succes">ثبت اطلاعات با موفقیت انجام شد.</p>
						<p class="alert alert-danger" id="submit-error"></p>
					</div>
				</div>
			</div>
		</div>

	</div>

</div>


@section scripts{
	<script>
		$('#ProvinceId').on('change',
			function () {
				var SelectedValue = $(this).val();
				if (SelectedValue !== "") {
					var procemessage = "<option value='0'> صبرکنید...</option>";
					$("#CityId").html(procemessage).show();
					$.ajax(
						{
							url: "/Cities/GetCityByProvince",
							data: { id: SelectedValue },
							cache: false,
							type: "POST",
							success: function (data) {
								var markup = "<option value='0'>انتخاب شهر</option>";
								for (var x = 0; x < data.length; x++) {
									markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
								}
								$("#CityId").html(markup).show();
							},
							error: function (reponse) {
								alert("error : " + reponse);
							}
						});
				}
			});

		$('#CityId').on('change',
			function () {
				var selectedValue = $(this).val();
				if (selectedValue !== "") {
					var procemessage = "<option value='0'> صبرکنید...</option>";
					$("#RegionId").html(procemessage).show();
					$.ajax(
						{
							url: "/Regions/GetRegionByCity",
							data: { id: selectedValue },
							cache: false,
							type: "POST",
							success: function (data) {
								var markup = "<option value='0'>انتخاب محله</option>";
								for (var x = 0; x < data.length; x++) {
									markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
								}
								$("#RegionId").html(markup).show();
							},
							error: function (reponse) {
								alert("error : " + reponse);
							}
						});
				}
			});

		$("#CellNumber").focus(function () {
		}).blur(function () {
			var cellNumber = $("#CellNumber").val();

			$.ajax(
				{
					url: "/Orders/GetUserFullName",
					data: { cellNumber: cellNumber },
					cache: false,
					type: "POST",
					success: function (data) {
						if (data !== 'invalid') {
							$('#fullName').val(data);
						}
						else
							$('#fullName').val('');
					},
					error: function (reponse) {
						alert("خطا : صفحه را مجددا باز کنید");
					}
				});
		});


		$('select[name="ProductGroupId"]').change(function () {
			freezePage();
			var id = $(this).val();

			$.ajax({
				type: "GET",
				url: "/InputDocument/LoadProductByGroupId",
				contentType: "application/json; charset=utf-8",
				data: { "id": id },
				datatype: "json",
				success: function (data) {
					loadProductList(data.Products);
				},
				error: function () {
					alert("Dynamic content load failed.");
				}
			});

			unFreezePage();
		});


		$(document).ready(function() {
			setCookie('image', null);
		});

	</script>
}